---
- hosts: localhost
  vars:
    my_repo: beargiles/pljava
    pg_repo: library/postgres
  tasks:

    # ------------------------------------------------------
    #
    # get list of images I've already built.
    #
    # ------------------------------------------------------
    - name: Request docker hub auth token
      ansible.builtin.uri:
        url: 'https://auth.docker.io/token?service=registry.docker.io&scope=repository:{{ my_repo }}:pull'
        return_content: true
        status_code: 200
      register: docker_hub_auth_token_resp
      when: false

    - name: extract token
      ansible.builtin.set_fact:
        docker_hub_auth_token:
          access_token: '{{ docker_hub_auth_token_resp.json.access_token }}'
          exipres_in: '{{ docker_hub_auth_token_resp.json.expires_in }}'    # 300
          issued_at: '{{ docker_hub_auth_token_resp.json.issued_at }}'      # '2023-06-06T23:22:59.623310754Z'
          token: '{{ docker_hub_auth_token_resp.json.token }}'
      when: false

    - name: request tags
      ansible.builtin.uri:
        url: 'https://registry-1.docker.io/v2/{{ my_repo }}/tags/list'
        headers:
          Authorization: 'Bearer {{ docker_hub_auth_token.token }}'
        return_content: true
        status_code: 200
      register: tags_resp
      when: false

    - name: write response to file
      ansible.builtin.copy:
        content: '{{ tags_resp.json.tags }}'
        dest: my_tags.json
      when: false


    # ------------------------------------------------------
    #
    # get list of images available for postgres
    #
    # ------------------------------------------------------
    - name: Request docker hub auth token
      ansible.builtin.uri:
        url: 'https://auth.docker.io/token?service=registry.docker.io&scope=repository:{{ pg_repo }}:pull'
        return_content: true
        status_code: 200
      register: docker_hub_auth_token_resp
      when: false

    - name: extract token
      ansible.builtin.set_fact:
        docker_hub_auth_token:
          access_token: '{{ docker_hub_auth_token_resp.json.access_token }}'
          exipres_in: '{{ docker_hub_auth_token_resp.json.expires_in }}'    # 300
          issued_at: '{{ docker_hub_auth_token_resp.json.issued_at }}'      # '2023-06-06T23:22:59.623310754Z'
          token: '{{ docker_hub_auth_token_resp.json.token }}'
      when: false

    - name: request tags
      ansible.builtin.uri:
        url: 'https://registry-1.docker.io/v2/{{ pg_repo }}/tags/list'
        headers:
          Authorization: 'Bearer {{ docker_hub_auth_token.token }}'
        return_content: true
        status_code: 200
      register: tags_resp
      when: false

    - name: write response to file
      ansible.builtin.copy:
        content: '{{ tags_resp.json.tags }}'
        dest: tags.json
      when: false

    - name: read response from file
      ansible.builtin.slurp:
        src: tags.json
      register: tags_content
      when: false

    # ------------------------------------------------------
    #
    # Identify images to Build.
    #
    # ------------------------------------------------------

      # bit of a cheat for now...
    - name: create set of tags to build
      ansible.builtin.set_fact:
        tags:
          - '15.2'

    - name: build docker images
      vars:
        pg_version: '{{ item }}'
        pg_major: "{{ item | regex_replace('^([0-9]+).*$', '\\1') }}"
      community.docker.docker_image:
        name: 'beargiles/pljava'
        build:
          path: .
          args:
            POSTGRES_MAJOR: '{{ pg_major }}'
            POSTGRES_VERSION: '{{ pg_version }}'
        tag: '{{ pg_version }}'
        push: true
        source: build
      loop: '{{ tags }}'


     # to do: add 'latest'
