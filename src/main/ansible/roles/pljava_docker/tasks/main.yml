---

#
# Determine what's already available.
#
-
# --- get list of postgresql tags ---
- name: Get list of postgresql tags
  vars:
    repo: '{{ postgres_name }}'
  ansible.builtin.include_tasks: list-tags.yml

- name: Capture PostgreSQL tags
  ansible.builtin.set_fact:
    all_pg_tags: '{{ all_tags }}'

- name: Get list of our tags
  vars:
    repo: '{{ targets[0].name }}'
  ansible.builtin.include_tasks: list-tags.yml

- name: Capture our own tags
  ansible.builtin.set_fact:
    existing_tags: '{{ all_tags }}'

- name: Set facts (postgres_tags)
  ansible.builtin.set_fact:
    pg_versions: '{{ all_pg_tags | difference(existing_tags) }}'
    latest_full_pg_version: '{{ all_pg_tags | sort(reverse = true) | first() }}'

- name: show information...
  ansible.builtin.debug: var=pg_versions

- name: show information...
  ansible.builtin.debug: var=latest_full_pg_version

# --- build and push docker images ---

- name: Build docker images by PostgreSQL version
  vars:
    pg_version: '{{ pg_version_build }}'
  ansible.builtin.include_tasks: build-images-by-pg-version.yml
  loop: '{{ pg_versions }}'
  loop_control:
    loop_var: pg_version_build
  when:
    - pg_versions is defined
    - pg_versions[0] is defined

- name: Push docker images to docker hub (with debian release tags)
  ansible.builtin.include_tasks: push-all-images.yml
  when:
    - pg_versions is defined
    - pg_versions[0] is defined
