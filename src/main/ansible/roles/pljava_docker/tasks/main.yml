---
# tasks file for pljava_docker

- name: Create set of tags to build
  ansible.builtin.set_fact:
    tags: []

#
# Disable this block for now...
#
# name: Get list of postgresql tags
# vars:
#   repo: '{{ postgres_name }}'
# ansible.builtin.include_tasks: list-tags.yml

# name: Set facts (postgres_tags)
#  ansible.builtin.set_fact:
#    postgres_tags: '{{ full_tags }}'
#    postgres_latest_major_tag: '{{ latest_major_tag }}'

# name: Build docker images
# ansible.builtin.include_tasks: build-images.yml
# loop: '{{ tags }}'
# loop_control:
#   loop_var: pg_version
# when:
#   - tags is defined
#   - tags[0] is defined

#
# Do this instead
#
- name: Build all packages
  ansible.builtin.shell: 'src/main/docker/buildall.sh'

#
# another cheat - for some reason 'tags' is still what I had months ago...
#

#
# Log into docker hub
#
- name: Log into docker hub
  community.docker.docker_login:
    username: "{{ lookup('ansible.builtin.env', 'DOCKERHUB_USERNAME') }}"
    password: "{{ lookup('ansible.builtin.env', 'DOCKERHUB_PASSWORD') }}"
  register: login_resp
  when:
    - actual_versions is defined
    - actual_versions[0] is defined

- name: Verify we succeeded
  ansible.builtin.assert:
    that:
      - not login_resp.failed
    msg: Unable to log into Docker Hub

- name: Push pgxnclient docker images to docker hub
  vars:
    version: '{{ item }}'
  community.docker.docker_image:
    name: '{{ pgxnclient_name }}:{{ version }}'
    repository: '{{ pgxnclient_name }}:{{ version }}'
    force_version: true
    push: true
    source: local
  loop: '{{ actual_versions }}'

- name: Push pljava docker images to docker hub
  vars:
    version: '{{ item }}'
  community.docker.docker_image:
    name: '{{ pljava_name }}:{{ version }}'
    repository: '{{ pljava_name }}:{{ version }}'
    force_version: true
    push: true
    source: local
  loop: '{{ actual_versions }}'

- name: Push pljava-dev docker images to docker hub
  vars:
    version: '{{ item }}'
  community.docker.docker_image:
    name: '{{ pljava_dev_name }}:{{ version }}'
    repository: '{{ pljava_dev_name }}:{{ version }}'
    force_version: true
    push: true
    source: local
  loop: '{{ actual_versions }}'

- name: Log out of docker hub
  community.docker.docker_login:
    state: absent
